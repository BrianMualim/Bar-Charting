#include <iostream>
#include <string>
#define CATEGORIES 5
using std::ios;

//Function to get 5 category names
void get_category(std::string cat[CATEGORIES]);

//Function to get 5 category valyes
void get_values(double values[CATEGORIES], std::string cat[CATEGORIES]);

//Computes total value and saves value to total variable
void compute_total(double& total, double vals[CATEGORIES]);

//Computes longest category name and stores in longest
void get_longest_category_name(int& longest, std::string cat[CATEGORIES]);

//Prints the bar chart
void bar_chart(std::string cat[CATEGORIES], double values[CATEGORIES], int lcl, double total);


int main() {
	std::string categories[CATEGORIES];
	double values[CATEGORIES];
	double total = 0;
	int lcl = 0;
	int i = 0;
	while (true) {
		std::cout << "Enter the category names of your five-bar bar chart : \n";

		std::cout.setf(ios::fixed);
		std::cout.setf(ios::showpoint);
		std::cout.precision(2);

		get_category(categories);
		std::cout << "\n";
		get_values(values, categories);
		compute_total(total, values);
		get_longest_category_name(lcl, categories);


		std::cout << "\nCategories as a Percentage of the Total (category_amount / " << total << ")\n";
		std::cout << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n";
		std::cout << "\n";

		bar_chart(categories, values, lcl, total);

		std::cout << "\nEnter y to create another bar chart, or any other key to exit : ";
		std::string response; 
		std::cin >> response; 
		std::cout << "\n";
		if (response != "y") {
			break;
		}
		lcl = 0; total = 0.0;
	}
	
}

void get_category(std::string cat[CATEGORIES]) {

	for (int i = 0;i < CATEGORIES;i++) {
		std::cin >> cat[i];
	}

}

void get_values(double values[CATEGORIES], std::string cat[CATEGORIES]) {

	for (int i = 0;i < CATEGORIES;i++) {
		std::cout << "How many in the " + cat[i] + " category: ";
		std::cin >> values[i];
	}

}

void compute_total(double& total, double vals[CATEGORIES]) {

	for (int i = 0;i < CATEGORIES;i++) {
		total += vals[i];
	}
}

void get_longest_category_name(int& longest, std::string cat[CATEGORIES]) {

	for (int i = 0;i < 5;i++) {
		if (cat[i].length() > longest) {
			longest = cat[i].length();
		}
		else {
			continue;
		}
	}
}

void bar_chart(std::string cat[CATEGORIES], double values[CATEGORIES], int lcl, double total) {

	for (int i = 0;i < 5;i++) {
		//Left Side
		std::cout.fill(' ');
		std::cout.width(lcl + 5);
		std::cout << std::left << cat[i];

		//Right Side
		std::cout.fill('*');
		std::string valuesLength = std::to_string(values[i]);
		double percentageValue = (values[i] / total) * 100 + 0.5;
		if (percentageValue < 10) {
			valuesLength = valuesLength.substr(0, 4);
		}
		else {
			valuesLength = valuesLength.substr(0, 5);
		}

		std::cout.width(percentageValue+valuesLength.length());
		std::cout << std::right << (values[i]/total)*100 << "\n";
	}
		
}
